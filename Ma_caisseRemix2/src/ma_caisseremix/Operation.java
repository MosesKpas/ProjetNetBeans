
package ma_caisseremix;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.awt.Color;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
public class Operation extends javax.swing.JFrame {
    //facture
    Double Depot=0.0;
    Double Retrait=0.0;
    Double bHeight=0.0;
    ArrayList<String> fNom= new ArrayList<>();
    ArrayList<String> fPostnom= new ArrayList<>();
    ArrayList<String> fPrenom= new ArrayList<>();
    ArrayList<String> fDate= new ArrayList<>();
    ArrayList<String> fMontant= new ArrayList<>();
    ArrayList<String> fFrais= new ArrayList<>();
    ArrayList<String> fMontantTotal= new ArrayList<>();
    ArrayList<String> fMotif= new ArrayList<>();
// Base de donnee
  private String url="jdbc:mysql://127.0.0.1:3306/base",user="root",pass="";
  private Statement st;
  private String requetteVerifier;
  private String requetteAide;
  private String requetteEnregisBilan;
  private String requetteInserer;
  private Connection con;
  private String devise; 
  private String rech;
  void ouverture(){
      try {
          Class.forName("com.mysql.jdbc.Driver");
          this.con=(Connection)DriverManager.getConnection(url,user,pass);
          System.out.println("c'est bon");
      } catch (Exception e) {JOptionPane.showMessageDialog(null,""+e.getMessage());
      }
  }
  void fermeture(){
      try {
          this.con.close();
          this.st.close();
          System.out.println("ferme");
      } catch (Exception e) {JOptionPane.showMessageDialog(null,""+e.getMessage());
      }
}
    public Operation() {
        initComponents();
        prendrePourcent();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cachecache = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        boxNom = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        boxCode = new javax.swing.JPasswordField();
        boxPrenom = new javax.swing.JTextField();
        boxPostnom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        boutonVerifier = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        choixoperation = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        choixdevise = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        montantActuelfranc = new javax.swing.JTextField();
        montantActueldollar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        montantinserer = new javax.swing.JTextField();
        montanttotal = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        pourc = new javax.swing.JLabel();
        sav8 = new javax.swing.JLabel();
        tage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("OPERATION EN CAISE");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cachecache, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cachecache, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, -1, -1));

        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 11, 84, 74));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Informations sur le cient"));

        boxNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxNomActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("POSTNOM:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("MOT DE PASSE:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("NOM:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("PRENOM:");

        boutonVerifier.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        boutonVerifier.setText("VERIFIER");
        boutonVerifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonVerifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(boxPrenom)
                                        .addComponent(boxCode, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(boxPostnom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boxNom, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(boutonVerifier)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(boxNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxPostnom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(boxPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(boxCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(boutonVerifier, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 268, -1, -1));

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Effectuer :"));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("OPERATION");

        choixoperation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Depot", "Retrait" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("DEVISE");

        choixdevise.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FC", "$" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(choixoperation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(choixdevise, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(choixoperation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(choixdevise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 115, -1, -1));

        jPanel5.setBackground(new java.awt.Color(153, 255, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Montant Actuel"));

        jLabel10.setText("FC");

        montantActuelfranc.setEditable(false);

        montantActueldollar.setEditable(false);

        jLabel11.setText("$");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(montantActueldollar)
                    .addComponent(montantActuelfranc, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(montantActuelfranc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(montantActueldollar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 133, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel12.setText("MONTANT");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 301, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel13.setText("TOTAL");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 369, -1, -1));
        jPanel1.add(montantinserer, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 297, 95, 31));

        montanttotal.setEditable(false);
        jPanel1.add(montanttotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 371, 99, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton2.setText("EFFECTUER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 501, -1, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton3.setText("ACCUEIL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 501, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel14.setText("Inserer le Montant ici");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 270, -1, -1));
        jPanel1.add(pourc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 42, 40));
        jPanel1.add(sav8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 51, 42, 46));
        jPanel1.add(tage, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 0, 46, 52));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boxNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxNomActionPerformed

    private void boutonVerifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonVerifierActionPerformed
        /* Verification dans la base de donnees:*/
         RechercheClient(boxNom.getText(),boxPostnom.getText(),boxPrenom.getText(),boxCode.getText());
    }//GEN-LAST:event_boutonVerifierActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        /* recuperation du choix de lùoperation*/
String choixOp=(String)choixoperation.getSelectedItem();
/* condition du choix de lùoperation
1. si son choix est le depot*/
if(choixOp.equals("Depot")){
/*recuperation du choix de la devise*/
String choixDev=(String)choixdevise.getSelectedItem();
if(choixDev.equals("$")){
/* recuperation du montant a deposer dans le champ montantinserer */
double MontantInserer=Double.parseDouble(montantinserer.getText());
/* recuperation du montant actuel dans le 
compte du client afficher a l'aide de la 
methode de recherche. là nous sommes dans dollar*/
double MontantActuel=Double.parseDouble(montantActueldollar.getText());
/* recuperation du pourcentage des frais a couper qui est inscrit dans 
pourc initialisé par le proprietaire de la boite*/
double pourcentage=Double.parseDouble(pourc.getText());
/*Calcul des frais a couper*/
double frais=MontantInserer*pourcentage;
/* calcul de la somme a introduire dans le compte du client*/
double nouveauMontant=MontantInserer-frais;

final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
        final String datestr=sdf.format(new Date ());
        String motif="Depot";
        
        montanttotal.setText(""+nouveauMontant);
        double mmmm=Double.parseDouble(montanttotal.getText());
        double NouveauMontant= mmmm+MontantActuel;
/* on depose cela dans la table franc*/
//int confirmation=Integer.parseInt("Montant inserer : "+MontantInserer+"\nFrais : "+frais+"\nMonatant Deposé : "+nouveauMontant+"\n appuyer 1 pour continuer ");
    DepotDollar(boxNom.getText(), boxPostnom.getText(), boxPrenom.getText(), datestr,MontantInserer, motif, NouveauMontant);
    MonFrais(frais, datestr);
RDollar();
double b=Double.parseDouble(cachecache.getText());
double c=b+NouveauMontant;
    EnregistrementBilan(datestr, c);
    cachecache.setText("");
    montanttotal.setText("");
    montantinserer.setText("");
    
      fNom.add(boxNom.getText());
      fPostnom.add(boxPostnom.getText());
      fPrenom.add(boxPrenom.getText());
      fDate.add(datestr);
      fMontant.add(""+MontantInserer);
      fMotif.add(motif);
      fFrais.add(""+frais);
      fMontantTotal.add(""+NouveauMontant);
      Impri();
}

/*-------------------- depot Franc-------------------*/

if(choixDev.equals("FC")){
/* recuperation du montant a deposer dans le champ montantinserer */
double MontantInserer=Double.parseDouble(montantinserer.getText());
/* recuperation du montant actuel dans le 
compte du client afficher a l'aide de la 
methode de recherche. là nous sommes dans dollar*/
double MontantActuel=Double.parseDouble(montantActuelfranc.getText());
/* recuperation du pourcentage des frais a couper qui est inscrit dans 
pourc initialisé par le proprietaire de la boite*/
double pourcentage=Double.parseDouble(pourc.getText());
/*Calcul des frais a couper*/
double frais=MontantInserer*pourcentage;
/* calcul de la somme a introduire dans le compte du client*/
double nouveauMontant=MontantInserer-frais;

final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
        final String datestr=sdf.format(new Date ());
        String motif="Depot"; 
        montanttotal.setText(""+nouveauMontant);
        double mmmm=Double.parseDouble(montanttotal.getText());
        double NouveauMontant= mmmm+MontantActuel;
/* on depose cela dans la table franc*/
//int confirmation=Integer.parseInt("Montant inserer : "+MontantInserer+"\nFrais : "+frais+"\nMonatant Deposé : "+nouveauMontant+"\n appuyer 1 pour continuer ");
    DepotFranc(boxNom.getText(), boxPostnom.getText(), boxPrenom.getText(), datestr,MontantInserer, motif, NouveauMontant);
    MonFrais(frais, datestr);
RFranc();
double b=Double.parseDouble(cachecache.getText());
double c=b+nouveauMontant;
    EnregistrementBilan2(datestr, c);
    cachecache.setText("");
    montantinserer.setText("");
    montanttotal.setText("");
    
      fNom.add(boxNom.getText());
      fPostnom.add(boxPostnom.getText());
      fPrenom.add(boxPrenom.getText());
      fDate.add(datestr);
      fMontant.add(""+MontantInserer);
      fMotif.add(motif);
      fFrais.add(""+frais);
      fMontantTotal.add(""+NouveauMontant);
      Impri();
}
     
}

/*------------------- Retrait -----------------------*/

if(choixOp.equals("Retrait")){
/*recuperation du choix de la devise*/
String choixDev=(String)choixdevise.getSelectedItem();
if(choixDev.equals("$")){
/* recuperation du montant a deposer dans le champ montantinserer */
double MontantInserer=Double.parseDouble(montantinserer.getText());
/* recuperation du montant actuel dans le 
compte du client afficher a l'aide de la 
methode de recherche. là nous sommes dans dollar*/
double MontantActuel=Double.parseDouble(montantActueldollar.getText());
double nouveauMontant=MontantActuel-MontantInserer;
if(nouveauMontant>0){
      montanttotal.setText(""+nouveauMontant);
    double NouveauMontant=Double.parseDouble(montanttotal.getText());
final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
        final String datestr=sdf.format(new Date ());
        String motif="Retrait";
/* on depose cela dans la table franc*/
//int confirmation=Integer.parseInt("Montant inserer : "+MontantInserer+"\nFrais : "+frais+"\nMonatant Deposé : "+nouveauMontant+"\n appuyer 1 pour continuer ");
    DepotDollar(boxNom.getText(), boxPostnom.getText(), boxPrenom.getText(), datestr,MontantInserer, motif, nouveauMontant);
    
RDollar();
double b=Double.parseDouble(cachecache.getText());
double c=b-nouveauMontant;
    EnregistrementBilan(datestr, c);
    cachecache.setText("");
    montanttotal.setText("");
    montantinserer.setText("");
    
      fNom.add(boxNom.getText());
      fPostnom.add(boxPostnom.getText());
      fPrenom.add(boxPrenom.getText());
      fDate.add(datestr);
      fMotif.add(motif);
      fFrais.add("---");
      fMontant.add(""+MontantInserer);
      fMontantTotal.add(""+NouveauMontant);
      Impri();
}
}
if(choixDev.equals("FC")){
/* recuperation du montant a deposer dans le champ montantinserer */
double MontantInserer=Double.parseDouble(montantinserer.getText());
/* recuperation du montant actuel dans le 
compte du client afficher a l'aide de la 
methode de recherche. là nous sommes dans dollar*/
double MontantActuel=Double.parseDouble(montantActuelfranc.getText());
double nouveauMontant=MontantActuel-MontantInserer;
if(nouveauMontant>0){
    montanttotal.setText(""+nouveauMontant);
    double NouveauMontant=Double.parseDouble(montanttotal.getText());
final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
        final String datestr=sdf.format(new Date ());
        String motif="Retrait";
/* on depose cela dans la table franc*/
//int confirmation=Integer.parseInt("Montant inserer : "+MontantInserer+"\nFrais : "+frais+"\nMonatant Deposé : "+nouveauMontant+"\n appuyer 1 pour continuer ");
    DepotFranc(boxNom.getText(), boxPostnom.getText(), boxPrenom.getText(), datestr,MontantInserer, motif, NouveauMontant);
    
RFranc();
double b=Double.parseDouble(cachecache.getText());
double c=b-MontantInserer;
    EnregistrementBilan2(datestr, c);
    cachecache.setText("");
    montanttotal.setText("");
    montantinserer.setText("");
    
      fNom.add(boxNom.getText());
      fPostnom.add(boxPostnom.getText());
      fPrenom.add(boxPrenom.getText());
      fDate.add(datestr);
      fMontant.add(""+MontantInserer);
      fMotif.add(motif);
      fFrais.add("---");
      fMontantTotal.add(""+NouveauMontant);
      Impri();
      
}
}
}



// bien effectuer:
        
      //  String op=(String) choixoperation.getSelectedItem();
  //------------------------ DEPOT DEPOT DEPOT  --------------------------------------------------------------------------
//if(op=="Depot"){
//String dev=(String) choixdevise.getSelectedItem();
//if(dev.equals("FC")){
 // recuperation du montant actuel dollar
  //  double h=Integer.parseInt(montantfranc.getText());
    // recuperation montant inserer
    //double fg=Integer.parseInt(montantinserer.getText());
    // addition 
   //double jk=h+fg;
   /* double montantretenu=Double.parseDouble(pourc.getText());
    double acouper=jk*montantretenu;*/
    // if((jk>0) && (fg>0)){
    // affichage du montant total
    //total.setText(""+jk);
    //RFranc();
    // recuperation du montant total
    //double g= Double.parseDouble(total.getText());
    //JOptionPane.showConfirmDialog(null, " nouveau montant : "+g+" poursuivre ?");
    // final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
      //  final String datestr=sdf.format(new Date ());
       // String motif="Depot";
         //DepotFranc(nom.getText(),post.getText(),pre.getText(), datestr,fg,motif, g);
//    EnregistrementBilan(sav8.getText(),g);
  //   JOptionPane.showMessageDialog(null," Operation effectuee");
 //     No.add(nom.getText());
  //    Post.add(post.getText());
   //   Pre.add(pre.getText());
    //  Date1.add(datestr);
    //  Mont.add(""+g);
       //int ghl=Integer.parseInt(cachecache.getText());
    //g=g+ghl;
      // EnregistrementBilan2(datestr, g);
      // JOptionPane.showConfirmDialog(null," Imprimer ?");
    /*  int choix=Integer.parseInt(JOptionPane.showInputDialog(" imprimer ?"));
       if(choix==1){
      Impri();
      } else{}
     }
      else{JOptionPane.showMessageDialog(null," Solde insuffisant");
      montantinserer.setText("");*/
      //cachecache.setText("");
    /*  }
}
if(dev.equals("$")){*/
    // recuperation du montant actuel dollar
   // int h=Integer.parseInt(montantdollar.getText());
    // recuperation montant inserer
  //  int fg=Integer.parseInt(montantinserer.getText());
    // addition 
 //  int jk=h+fg;
 //    if((jk>0) && (fg>0)){
    // affichage du montant total
  //  sav8.setText(""+jk);
    // recuperation du montant total
 /*   int g= Integer.parseInt(sav8.getText());
    RDollar();
    JOptionPane.showConfirmDialog(null, " nouveau montant : "+g+" poursuivre ?");
     final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
        final String datestr=sdf.format(new Date ());
        String motif="Depot";
    DepotDollar(nom.getText(),post.getText(),pre.getText(), datestr,fg,motif, g);
    EnregistrementBilan(sav8.getText(),g);
      JOptionPane.showMessageDialog(null," Operation effectuee");
      No.add(nom.getText());
      Post.add(post.getText());
      Pre.add(pre.getText());
      Date1.add(datestr);
      Mont.add(""+g);*/
      // int ghl=Integer.parseInt(cachecache.getText());
    //g=g+ghl;
   /*    EnregistrementBilan(datestr, g);
      int choix=Integer.parseInt(JOptionPane.showInputDialog(" imprimer ?"));
       if(choix==1){
      Impri();
      } else{}
     }
      else{JOptionPane.showMessageDialog(null," Solde insuffisant");
      montantinserer.setText("");*/
      //cachecache.setText("");
    /*  }
   }
}*/
//------------------------------------------------- RETRAIT RETRAIT RETRAIT  --------------------------------------------------------------------------
/* if(op=="Retrait"){
String dev=(String) choixdevise.getSelectedItem();
if(dev.equals("FC")){*/
  // recuperation du montant actuel dollar
  //  int h=Integer.parseInt(montantfranc.getText());
// recuperation montant inserer
 /*   int fg=Integer.parseInt(montantinserer.getText());
   
   int jk=h-fg;
    
      if((jk>0) && (fg>0)){*/
       // affichage du montant total
 /*   total.setText(""+jk);
    
    int g= Integer.parseInt(total.getText());
    JOptionPane.showConfirmDialog(null, " nouveau montant : "+g+" poursuivre ?");final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
        final String datestr=sdf.format(new Date ());
        String motif="Retrait";
        RFranc();
    RetraitFranc(nom.getText(),post.getText(),pre.getText(), datestr,fg,motif, g);
    EnregistrementBilan(sav8.getText(),g);
       JOptionPane.showMessageDialog(null," Operation effectuee");
       No.add(nom.getText());
      Post.add(post.getText());
      Pre.add(pre.getText());
      Date1.add(datestr);*/
    //  Mont.add(""+g);
       //int ghl=Integer.parseInt(cachecache.getText());
   // g=ghl-fg;
    //   EnregistrementBilan2(datestr, g);
     //   int choix=Integer.parseInt(JOptionPane.showInputDialog(" imprimer ?"));
      // if(choix==1){
      //Impri();
     // } else{}
      //}
      //else{JOptionPane.showMessageDialog(null," Solde insuffisant");
      //montantinserer.setText("");
      //cachecache.setText("");
     // }
    
//}
//if(dev.equals("$")){
     // recuperation du montant actuel dollar
   // int h=Integer.parseInt(montantdollar.getText());
// recuperation montant inserer
  //  int fg=Integer.parseInt(montantinserer.getText());
    // soustraction
  //    int jk=h-fg;
    //  if((jk>0) && (fg>0)){
       // affichage du montant total
  /*  total.setText(""+jk);
    int g= Integer.parseInt(total.getText());
    JOptionPane.showConfirmDialog(null, " nouveau montant : "+g+" poursuivre ?");
    final SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy  hh:mm:ss");
        final String datestr=sdf.format(new Date ());
        String motif="Retrait";
    RetraitDollar(nom.getText(),post.getText(),pre.getText(), datestr,fg,motif, g);
    RDollar();*/
    //int ghl=Integer.parseInt(cachecache.getText());
   // g=ghl-fg;
 /*   EnregistrementBilan(sav8.getText(),g);
       JOptionPane.showMessageDialog(null," Operation effectuee"); montantinserer.setText("");
      No.add(nom.getText());
      Post.add(post.getText());
      Pre.add(pre.getText());
      Date1.add(datestr);
      Mont.add(""+g);
          EnregistrementBilan(datestr, g);
       int choix=Integer.parseInt(JOptionPane.showInputDialog(" imprimer ?"));
       if(choix==1){
      Impri();
      } else{}
      }
      else{JOptionPane.showMessageDialog(null," Solde insuffisant");    
      }  
}
} total.setText("");
montantinserer.setText("");*/
//cachecache.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Choix().setVisible(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Operation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Operation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Operation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Operation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Operation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonVerifier;
    private javax.swing.JPasswordField boxCode;
    private javax.swing.JTextField boxNom;
    private javax.swing.JTextField boxPostnom;
    private javax.swing.JTextField boxPrenom;
    private javax.swing.JLabel cachecache;
    private javax.swing.JComboBox<String> choixdevise;
    private javax.swing.JComboBox<String> choixoperation;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField montantActueldollar;
    private javax.swing.JTextField montantActuelfranc;
    private javax.swing.JTextField montantinserer;
    private javax.swing.JTextField montanttotal;
    private javax.swing.JLabel pourc;
    private javax.swing.JLabel sav8;
    private javax.swing.JLabel tage;
    // End of variables declaration//GEN-END:variables
/* Methode de verification du client*/
     public void RechercheClient(String Nom, String Postnom, String Prenom, String Code){
    try {
        ouverture();
        this.st=(Statement)this.con.createStatement();
        this.requetteVerifier="select * from client where Nom='"+Nom+"' and Postnom ='"+Postnom+"'  and Prenom ='"+Prenom+"'  and code ='"+Code+"'";
        ResultSet rs= this.st.executeQuery(requetteVerifier);
        if(rs.next()){
            JOptionPane.showMessageDialog(null,"trouver");
            /* Rappel de la methode qui nous permetra de recuperer le montant du client en Dollar et en franc*/
            RechercheDollar(Nom, Postnom, Prenom);
            RechercheFranc(Nom, Postnom, Prenom);
        
        }
        else{
        JOptionPane.showMessageDialog(null,"pas trouver");}
        fermeture();
    } catch (Exception e) {JOptionPane.showMessageDialog(null,""+e.getMessage());
    }
}
     
     /* Methode de la recherhe en franc */
    public void RechercheFranc(String Nom, String Postnom,String Prenom){
    try {
        ouverture();
        this.st=(Statement)this.con.createStatement();
        this.rech="select MontantTotal from franc where Nom='"+Nom+"' and Postnom='"+Postnom+"' and Prenom='"+Prenom+"' ";
        ResultSet rs=st.executeQuery(rech);
        while(rs.next())   
        {double mm=rs.getDouble("MontantTotal");
        montantActuelfranc.setText(""+mm);
            System.out.println("c'est bon");
        }
        fermeture();
    } catch (SQLException e) {JOptionPane.showMessageDialog(null,"erreur "+e.getMessage());
    }
}
    /* Metode ded la recherce en dollar  */
public void RechercheDollar(String Nom, String Postnom,String Prenom){
    try {
        ouverture();
        this.st=(Statement)this.con.createStatement();
        this.rech="select MontantTotal from dollar where Nom='"+Nom+"' and Postnom='"+Postnom+"' and Prenom='"+Prenom+"' ";
        ResultSet rs=st.executeQuery(rech);
        while(rs.next())   
        {double mm=rs.getDouble("MontantTotal");
        montantActueldollar.setText(""+mm);
        }
        fermeture();   
    } catch (Exception e) {JOptionPane.showMessageDialog(null,"erreur "+e.getMessage());
    }
}


 /* Depot dans la table franc */
 public void DepotFranc(String Nom,String Postnom,String Prenom, String Date, double Montant, String Motif,double MontantTotal){
    try {
        ouverture();
    this.st=(Statement)this.con.createStatement();
    this.requetteInserer="insert into franc value('"+Nom+"','"+Postnom+"','"+Prenom+"','"+Date+"','"+Montant+"','"+Motif+"','"+MontantTotal+"')";
    this.st.executeUpdate(requetteInserer);
        System.out.println("c'est bon");
        fermeture();
        JOptionPane.showMessageDialog(null,"Depot est effectué dans la table franc");
    } catch (SQLException e) {JOptionPane.showMessageDialog(null,"erreur "+e.getMessage());
    }
}/* Depot dans la table dollar */
 public void DepotDollar(String Nom,String Postnom,String Prenom, String Date, double Montant, String Motif,double MontantTotal){
    try {
        ouverture();
    this.st=(Statement)this.con.createStatement();
    this.requetteInserer="insert into dollar value('"+Nom+"','"+Postnom+"','"+Prenom+"','"+Date+"','"+Montant+"','"+Motif+"','"+MontantTotal+"')";
    this.st.executeUpdate(requetteInserer);
        System.out.println("c'est bon");
        fermeture();
        JOptionPane.showMessageDialog(null,"Depot  est effectué dans la table $");
    } catch (SQLException e) {JOptionPane.showMessageDialog(null,"erreur "+e.getMessage());
    }
}
 public void EnregistrementBilan(String Date,double Montant){
    try {ouverture();
    this.st=(Statement)this.con.createStatement();
   
    this.requetteEnregisBilan="insert into bilan value('"+Date+"','"+ Montant+"')";
    this.st.executeUpdate(requetteEnregisBilan);
        System.out.println("c'est ok");
         fermeture();
         JOptionPane.showMessageDialog(null,"enregistrement du montant dans la table  du $ ");
    } catch (Exception e) {JOptionPane.showMessageDialog(null,""+e.getMessage());
    }
}
 public void EnregistrementBilan2(String Date,double Montant2){
    try {ouverture();
    this.st=(Statement)this.con.createStatement();
    this.requetteEnregisBilan="insert into bilan2 value('"+Date+"','"+Montant2+"')";
    this.st.executeUpdate(requetteEnregisBilan);
        System.out.println("c'est ok");
         fermeture();
         JOptionPane.showMessageDialog(null,"enregistrement du montant dans la table  du fc ");
    } catch (Exception e) {JOptionPane.showMessageDialog(null,""+e.getMessage());
    }
}
 public void RetraitDollar(String nom,String post,String pre, String Date, double Montant, String Motif,double MontantTotal){
    try {ouverture();
    this.st=(Statement)this.con.createStatement();
    this.requetteInserer="insert into dollar value('"+nom+"','"+post+"','"+pre+"','"+Date+"','"+Montant+"','"+Motif+"','"+MontantTotal+"')";
    this.st.executeUpdate(requetteInserer);
        System.out.println("c'est ok");
        fermeture();
        JOptionPane.showMessageDialog(null,"Retrait du montant dans la table $");
    } catch (Exception e) {JOptionPane.showMessageDialog(null,"erreur "+e.getMessage());
    }
}
  public void RFranc(){
    try {
        ouverture();
        this.st=(Statement)this.con.createStatement();
        this.requetteVerifier="select Montant2 from bilan2 where 1";
        ResultSet rs= this.st.executeQuery(requetteVerifier);
        while(rs.next()){
         double ag=rs.getDouble("Montant2");
        cachecache.setText(""+ag);
        }
        fermeture();
      
    } catch (Exception e){JOptionPane.showMessageDialog(null,""+e.getMessage());
    }
}

  public void RDollar(){
    try {
        ouverture();
        this.st=(Statement)this.con.createStatement();
        this.requetteVerifier="select Montant from bilan where 1";
        ResultSet rs= this.st.executeQuery(requetteVerifier);
        while(rs.next()){
         double ag=rs.getDouble("Montant");
        cachecache.setText(""+ag);
        }
        fermeture();
        /*affiche le ;ontant total  sur le cachecache*/
    } catch (Exception e){JOptionPane.showMessageDialog(null,""+e.getMessage());
    }
}
  public void RetraitFranc(String nom,String post,String pre, String Date, double Montant, String Motif,double MontantTotal){
    try {
        ouverture();
    this.st=(Statement)this.con.createStatement();
    this.requetteInserer="insert into franc value('"+nom+"','"+post+"','"+pre+"','"+Date+"','"+Montant+"','"+Motif+"','"+MontantTotal+"')";
    this.st.executeUpdate(requetteInserer);
        System.out.println("c'est ok");
        fermeture();
        JOptionPane.showMessageDialog(null,"Retrait du montant franc");
    } catch (Exception e) {JOptionPane.showMessageDialog(null,"erreur "+e.getMessage());
    }
    
}
  // facture
public PageFormat getPageFormat(PrinterJob pj){

    PageFormat pf=pj.defaultPage();
    Paper paper= pf.getPaper();
    
    double bodyHeight= bHeight;
    double headerHeight = 5.0;
    double footerHeight = 5.0;
    double width= cm_to_pp(8);
    double height= cm_to_pp(headerHeight+bodyHeight+footerHeight);
    paper.setSize(width,height);
    pf.setPaper(paper);
return pf;
}
protected static double cm_to_pp(double cm){
return toPPI(cm*0.393600787);
}
protected static double toPPI(double inch){
return inch * 72d;
}
public class BillPrintale implements Printable{
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException{
    int result=NO_SUCH_PAGE;
    if(pageIndex==0){
    Graphics2D  g2d= (Graphics2D) graphics;
    double width= pageFormat.getImageableHeight();
    g2d.translate((int)pageFormat.getImageableX(),(int) pageFormat.getImageableX());
        try {
            int y=20;
            int yshift=10;
            int headerRectHeight=15;
            g2d.setFont(new Font("Monospaced",Font.PLAIN,9));
            //g2d.drawImage(icon.getmage(),50,20,90,30, rootPane); y+=yshift+30;
            g2d.drawString("---------------------------------------------------------------",12,y); y+=yshift;
            g2d.drawString("                           Ma Caisse              ",12,y); y+=yshift;
            g2d.drawString("---------------------------------------------------------------",12,y); y+=yshift;
            g2d.drawString("   Date    :  "+fDate+" ",10,y); y+=yshift;
            g2d.drawString("   Nom     :  "+fNom+" ",10,y); y+=yshift;
            g2d.drawString("   Postnom :  "+fPostnom+" ",10,y); y+=yshift;
            g2d.drawString("   Prenom  :  "+fPrenom+" ",10,y); y+=yshift; 
            g2d.drawString("   Montant :  "+fMontant+" ",10,y); y+=yshift;
            g2d.drawString("   Motif   :  "+fMotif+" ",10,y); y+=yshift;
            g2d.drawString("   Frais   :  "+fFrais+" ",10,y); y+=yshift;
            g2d.drawString("   Montant Total :  "+fMontantTotal+" ",10,y); y+=yshift;
            g2d.drawString("---------------------------------------------------------------",12,y); y+=yshift;
            g2d.drawString("    Signature "+fNom+"                  Signature du Caissier",12,y); y+=yshift;
            g2d.drawString("                            ",12,y); y+=yshift;
            g2d.drawString("---------------------------------------------------------------",12,y); y+=yshift;
           
        } catch (Exception e) { e.printStackTrace();
        }
    result=PAGE_EXISTS;
    }
    return result;
    }
}
public void Impri(){
bHeight= Double.valueOf(fNom.size());
JOptionPane.showMessageDialog(rootPane,bHeight);
PrinterJob pj=PrinterJob.getPrinterJob();
pj.setPrintable(new BillPrintale(),getPageFormat(pj));
    try {
        pj.print();
    } catch (Exception e) { e.printStackTrace();
    }
}   
public void prendrePourcent(){
    try {
         ouverture();
        this.st=(Statement)this.con.createStatement();
        this.requetteVerifier="select Pourcentage from logg where 1";
        ResultSet rs= this.st.executeQuery(requetteVerifier);
        while(rs.next()){
         double ag=rs.getDouble("Pourcentage");
        pourc.setText(""+ag);
        }
        fermeture();
    JOptionPane.showMessageDialog(null,"on vas prendre le pourcentage");
    } catch (Exception e) {
    }
}
public void MonFrais(double Montant, String Date){
  try {ouverture();
    this.st=(Statement)this.con.createStatement();
    this.requetteInserer="insert into frais value('"+Montant+"','"+Date+"')";
    this.st.executeUpdate(requetteInserer);
        System.out.println("c'est ok");
        fermeture();
        JOptionPane.showMessageDialog(null,"retrait du pourcentage");
    } catch (Exception e) {JOptionPane.showMessageDialog(null,"erreur "+e.getMessage());
  
}
}
}