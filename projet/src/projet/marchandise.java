/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projet;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.awt.Graphics;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class marchandise extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst;
    Statement stm;
    ResultSet rs;
    
 DefaultTableModel tab = new DefaultTableModel();
 int tab1;
 DefaultTableModel model = new DefaultTableModel();
    int selectedrow;
    /**
     * Creates new form marchandise
     */
    public marchandise() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        tab = (DefaultTableModel) jTable1.getModel();
         table();
    }
    public void connecter(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=(Connection)(com.mysql.jdbc.Connection)DriverManager.getConnection("jdbc:mysql://localhost/projet","root","");
        } catch (Exception e) {
             System.out.println("Erreur "+e);
        }
    }

    private JFrame frame;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        article = new javax.swing.JTextField();
        qte = new javax.swing.JLabel();
        prd = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Ordinateur = new javax.swing.JLabel();
        Congelateur = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Machine_a_lavee = new javax.swing.JLabel();
        Aspirateur = new javax.swing.JLabel();
        Frigo = new javax.swing.JLabel();
        Fer_a_repasser = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Iphone12 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        Playstation4 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        Cuisiniere = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        Playstation5 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        facture = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        nom = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        date = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        paye = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        article.setEditable(false);
        article.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        article.setForeground(new java.awt.Color(240, 240, 240));
        article.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        article.setBorder(null);
        article.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articleActionPerformed(evt);
            }
        });

        qte.setText("jLabel5");

        prd.setEditable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(0, 204, 102));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pcjv.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Freezerjv.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/telejv.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/microjv.png"))); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Ordinateur.setBackground(new java.awt.Color(255, 255, 255));
        Ordinateur.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Ordinateur.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Ordinateur.setText("Ordinateur");
        Ordinateur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Ordinateur.setOpaque(true);

        Congelateur.setBackground(new java.awt.Color(255, 255, 255));
        Congelateur.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Congelateur.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Congelateur.setText("Congelateur");
        Congelateur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Congelateur.setOpaque(true);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Television");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel7.setOpaque(true);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Micro_onde");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.setOpaque(true);

        jLabel13.setBackground(new java.awt.Color(0, 204, 102));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel13.setText("640$");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.setOpaque(true);
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(0, 204, 102));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel14.setText("250");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.setOpaque(true);
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(0, 204, 102));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel15.setText(" 200$");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.setOpaque(true);
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(0, 204, 102));
        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel16.setText("80$");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.setOpaque(true);
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/machine.png"))); // NOI18N
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/aspirateur.png"))); // NOI18N
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/frigo.png"))); // NOI18N
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fer.png"))); // NOI18N
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Machine_a_lavee.setBackground(new java.awt.Color(255, 255, 255));
        Machine_a_lavee.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Machine_a_lavee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Machine_a_lavee.setText("Machine_a_lavee");
        Machine_a_lavee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Machine_a_lavee.setOpaque(true);

        Aspirateur.setBackground(new java.awt.Color(255, 255, 255));
        Aspirateur.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Aspirateur.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Aspirateur.setText("Aspirateur");
        Aspirateur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Aspirateur.setOpaque(true);

        Frigo.setBackground(new java.awt.Color(255, 255, 255));
        Frigo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Frigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Frigo.setText("Frigo");
        Frigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Frigo.setOpaque(true);

        Fer_a_repasser.setBackground(new java.awt.Color(255, 255, 255));
        Fer_a_repasser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Fer_a_repasser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Fer_a_repasser.setText("Fer_a_repasser");
        Fer_a_repasser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Fer_a_repasser.setOpaque(true);

        jLabel19.setBackground(new java.awt.Color(0, 204, 102));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel19.setText("120$");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.setOpaque(true);
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        jLabel20.setBackground(new java.awt.Color(0, 204, 102));
        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel20.setText("90$");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.setOpaque(true);
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        jLabel21.setBackground(new java.awt.Color(0, 204, 102));
        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel21.setText("150$");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel21.setOpaque(true);
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        jLabel22.setBackground(new java.awt.Color(0, 204, 102));
        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel22.setText("50$");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel22.setOpaque(true);
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/IPhone12.png"))); // NOI18N
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Iphone12.setBackground(new java.awt.Color(255, 255, 255));
        Iphone12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Iphone12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Iphone12.setText("Iphone12");
        Iphone12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Iphone12.setOpaque(true);

        jLabel24.setBackground(new java.awt.Color(0, 204, 102));
        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel24.setText("200$");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.setOpaque(true);
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/PS4jv.png"))); // NOI18N
        jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Playstation4.setBackground(new java.awt.Color(255, 255, 255));
        Playstation4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Playstation4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Playstation4.setText("Playstation4");
        Playstation4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Playstation4.setOpaque(true);

        jLabel26.setBackground(new java.awt.Color(0, 204, 102));
        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel26.setText("150$");
        jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.setOpaque(true);
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rechaud.png"))); // NOI18N
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Cuisiniere.setBackground(new java.awt.Color(255, 255, 255));
        Cuisiniere.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Cuisiniere.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Cuisiniere.setText("Cuisiniere");
        Cuisiniere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Cuisiniere.setOpaque(true);

        jLabel28.setBackground(new java.awt.Color(0, 204, 102));
        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel28.setText("120$");
        jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel28.setOpaque(true);
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel28MouseClicked(evt);
            }
        });

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/PS5jv.png"))); // NOI18N
        jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Playstation5.setBackground(new java.awt.Color(255, 255, 255));
        Playstation5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Playstation5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Playstation5.setText("Playstation5");
        Playstation5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Playstation5.setOpaque(true);

        jLabel30.setBackground(new java.awt.Color(0, 204, 102));
        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_buy_24px.png"))); // NOI18N
        jLabel30.setText("640$");
        jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel30.setOpaque(true);
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Ordinateur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Congelateur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Machine_a_lavee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Aspirateur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Frigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Fer_a_repasser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(606, 606, 606))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Iphone12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Playstation4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cuisiniere, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Playstation5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Ordinateur)
                        .addComponent(Congelateur))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel17)
                        .addComponent(jLabel18)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Machine_a_lavee)
                    .addComponent(Aspirateur)
                    .addComponent(Frigo)
                    .addComponent(Fer_a_repasser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel23)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Iphone12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel24))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel25)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Playstation4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel26))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel27)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Cuisiniere)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel28)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Playstation5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)))
                .addContainerGap(204, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel4);

        jButton8.setBackground(new java.awt.Color(255, 51, 51));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_close_window_30px.png"))); // NOI18N
        jButton8.setText("Quitter");
        jButton8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton8.setOpaque(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Marchandises", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        facture.setBackground(new java.awt.Color(51, 204, 0));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Facture du Client");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel9.setOpaque(true);

        nom.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        nom.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Nom");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Date");

        try {
            date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        date.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produits", "Quatité", "prix"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Total à payer");

        paye.setEditable(false);
        paye.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        paye.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout factureLayout = new javax.swing.GroupLayout(facture);
        facture.setLayout(factureLayout);
        factureLayout.setHorizontalGroup(
            factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, factureLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(factureLayout.createSequentialGroup()
                        .addGroup(factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(factureLayout.createSequentialGroup()
                                .addGroup(factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nom)
                                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)))
                            .addGroup(factureLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(paye, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        factureLayout.setVerticalGroup(
            factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(factureLayout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(factureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paye, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_print_50px.png"))); // NOI18N
        jButton1.setText("Imprimer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 153, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_sigma_32px.png"))); // NOI18N
        jButton2.setText("Calcul");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        save.setBackground(new java.awt.Color(0, 204, 51));
        save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_save_30px.png"))); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_delete_30px_2.png"))); // NOI18N
        jButton3.setText("Reintialiser");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton3.setOpaque(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 51, 51));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_delete_30px_2.png"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton4.setOpaque(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(facture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(facture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(save)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Facture", jPanel3);

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));

        jTable2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jButton5.setBackground(new java.awt.Color(255, 51, 51));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_delete_30px_2.png"))); // NOI18N
        jButton5.setText("Suprimer");
        jButton5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton5.setOpaque(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 51, 51));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_delete_30px_2.png"))); // NOI18N
        jButton6.setText("Reintialiser");
        jButton6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton6.setOpaque(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(51, 51, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_print_50px.png"))); // NOI18N
        jButton7.setText("Imprimer");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(171, 171, 171))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jButton7)
                        .addGap(69, 69, 69)
                        .addComponent(jButton6)
                        .addGap(84, 84, 84)
                        .addComponent(jButton5))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(258, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Liste des ventes", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 821, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        // TODO add your handling code here:
        try {
            //On commence par importer la connexion
            connecter();
            
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Ordinateur";
            
 // On selectionne le produit se trouvant dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui produit qui se trouve dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
                 if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 640*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
          
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }                
             }
            
             }   
               
        
        } catch (Exception e) {
            
        }
        
        
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Congelateur";
            
        //System.out.println("ca commence");
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
        
        int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
             
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
         if (qnt >0 && qnt <= com) {
             
           total = 250*qnt;
                 String payer = ""+total;
          
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
            
             }
             }
        
        } catch (Exception e) {
            
        }
        
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            Toolkit def = Toolkit.getDefaultToolkit();
        PrintJob pj = def.getPrintJob(this, "Impression", null);
        Graphics g = pj.getGraphics();
        facture.printAll(g);
        pj.end();        

        } catch (Exception e) {
            System.out.println(""+e.getMessage());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         selectedrow = jTable1.getSelectedRow();
    }//GEN-LAST:event_jTable1MouseClicked

    private void articleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_articleActionPerformed

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Television";
            
        System.out.println("ca commence");
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
        
        int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
             
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
         if (qnt >0 && qnt <= com) {
             
           total = 200*qnt;
                 String payer = ""+total;
          
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
         }
             }
            
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
        try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                  String prod = "Micro_onde";
            
        System.out.println("ca commence");
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
        
        int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
             
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
         if (qnt >0 && qnt <= com) {
             
           total = 80*qnt;
                 String payer = ""+total;
          
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
             }
             }
            
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Aide à faire le calcul des prix
        int numrow = jTable1.getRowCount();
        int numcol = jTable1.getColumnCount();
        
        double total= 0;
        for (int i =  0 ; i < numrow ; i++) {
            for (int j = 2; j < numcol; j++) {
                int val = Integer.valueOf(jTable1.getValueAt(i, j).toString());
            total += val+0;
            }
            
        }
        paye.setText(Double.toString(total));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
         
        try {
            
             if (nom.getText().contains("'")) {
                JOptionPane.showMessageDialog(null, "Pas des caracteres speciaux");
            } else {
                 connecter();
            pst = (PreparedStatement) con.prepareStatement("insert into ventes (nom,date,total) values (?,?,?)");
            
            pst.setString(1,nom.getText());
            pst.setString(2,date.getText());
            pst.setString(3,paye.getText());
            pst.executeUpdate();
            
            con.close();
             JOptionPane.showMessageDialog(null,"Client ajouté");
             table();
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur trouvée ici "+e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
        try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Machine_a_lavee";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 120*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
            
             }
             }
        
        } catch (Exception e) {
            
        }
        
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // TODO add your handling code here:
        try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                  String prod = "Aspirateur";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 90*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
           
             }
             
             }
        } catch (Exception e) {
            
        }
        
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // TODO add your handling code here:
        try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Frigo";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 150*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
         }
             }
            
            
        
        } catch (Exception e) {
            
        }
        
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // TODO add your handling code here:
        try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Fer_a_repasser";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 50*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
            
             }
             }
        
        } catch (Exception e) {
            
        }
        
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        // TODO add your handling code here:
         try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Iphone12";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 200*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
        if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
            
             }
             }
        
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        // TODO add your handling code here:
         try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Playstation4";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 150*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
            
         }
             }
            
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jLabel26MouseClicked

    private void jLabel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseClicked
        // TODO add your handling code here:
         try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
                 String prod = "Cuisiniere";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 120*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
        if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
            
        
             }
             }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jLabel28MouseClicked

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        // TODO add your handling code here:
         try {
            connecter();
            String Nom= nom.getText();
            String Date= date.getText();
             if (Nom.isEmpty() || Date.isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nom du client et date de vente");
             } else {
             
                   String prod = "Playstation5";
            
 // On selectionne le produit demandé dans la database
        this.stm=(Statement)this.con.createStatement();
        String verf="select qte from produit where nom = '"+prod+"'";
        ResultSet rs=this.stm.executeQuery(verf);
        while (rs.next()) {
            int ag= rs.getInt("qte");
            qte.setText(""+ag);  
        }
        con.close();
        
  //La quantité demandé sera soustrait par celui de nombre de produit dans la database et multiplier par le prix du produit
  //La quatité doit etre superieur à zero et inferieur ou egal à la quatité de la database
         int com=Integer.parseInt(qte.getText());
         if (com==0) {
                     JOptionPane.showMessageDialog(null, "Rupture de stock ");
                 }else{
         int qnt= Integer.parseInt(JOptionPane.showInputDialog("Combien voulez-vous en acheter ?"));
         String quant = ""+qnt;
         int v=com-qnt;
            
         int total = 0;
 
         if (qnt >0 && qnt <= com) {
                
             total = 640*qnt;
             
             String payer = ""+total;
 // Le produit sera ajouté à la facture du client et le programme nous dira combien il en reste dans la database   
         frame= new JFrame("Confirmer");
         if (JOptionPane.showConfirmDialog(frame, "Voulez vous confirmer cet achat",""+prod+"", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION) {
            JOptionPane.showMessageDialog(null, "il reste "+v+" "+prod);
             article.setText(""+ prod);
            
             String[] ligne = new String[]{prod, quant,payer};
                 tab.addRow(ligne);
                 save(prod,v);
        }
         
         else{
             JOptionPane.showMessageDialog(null, "Merci");
         }
         
                 
            }
         
         
         else{
             JOptionPane.showMessageDialog(null, "Quantité incorrect ou insuffisante");
         }
             }
            
             }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jLabel30MouseClicked

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
       DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
       nom.setText(model.getValueAt(i, 0).toString());
       date.setText(model.getValueAt(i, 2).toString());
       paye.setText(model.getValueAt(i, 3).toString());
       
    }//GEN-LAST:event_jTable2MouseReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       nom.setText(null);
       date.setText(null);
       paye.setText(null);
        while (tab.getRowCount() > 0) {
            for (int i = 0; i < tab.getRowCount(); i++) {
                tab.removeRow(0);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try {
            
            connecter();
            pst = (PreparedStatement) con.prepareStatement("delete from ventes where nom=?");
            pst.setString(1,nom.getText());
            pst.executeUpdate();
            con.close();
            JOptionPane.showMessageDialog(null,"Client supprimé");
            table();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       
        // TODO add your handling code here:
        try {
            connecter();
            pst= (PreparedStatement) con.prepareStatement("DELETE FROM `ventes` WHERE 1");
            pst.executeUpdate();
            con.close();
            JOptionPane.showMessageDialog(null, "La table a été vider");
            table();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        // imprimer le tableau
        String titre = "Liste des ventes";
        imprime.imprimerjTable(jTable1, titre);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         tab.removeRow(tab1);
         
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new menu().setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed
public void table(){
        String[]client = {"NOM","DATE","TOTAL"};
        String[]afficher = new String[3]; 
        DefaultTableModel model = new DefaultTableModel(null, client);
        try {
            connecter();
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery("select * from ventes");
            while(rs.next()){
                afficher[0] = rs.getString("nom");
                afficher[1] = rs.getString("date");
                afficher[2] = rs.getString("total");
                                
                model.addRow(afficher);
            }
            jTable2.setModel(model);
                con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(marchandise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(marchandise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(marchandise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(marchandise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new marchandise().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Aspirateur;
    private javax.swing.JLabel Congelateur;
    private javax.swing.JLabel Cuisiniere;
    private javax.swing.JLabel Fer_a_repasser;
    private javax.swing.JLabel Frigo;
    private javax.swing.JLabel Iphone12;
    private javax.swing.JLabel Machine_a_lavee;
    private javax.swing.JLabel Ordinateur;
    private javax.swing.JLabel Playstation4;
    private javax.swing.JLabel Playstation5;
    private javax.swing.JTextField article;
    private javax.swing.JFormattedTextField date;
    private javax.swing.JPanel facture;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField nom;
    private javax.swing.JTextField paye;
    private javax.swing.JTextField prd;
    private javax.swing.JLabel qte;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
public void save(String NOM, int qte){
    try {
        connecter();
        this.stm=(Statement)this.con.createStatement();
        String insert="UPDATE `produit` SET `qte`='"+qte+"' WHERE nom = '"+NOM+"' ";
        this.stm.executeUpdate(insert);
        System.out.println("Enregistrer");
        con.close();
    } catch (Exception e) {
        System.out.println("Non enregister");
    }
}
}
